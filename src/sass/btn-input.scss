@import './vars';

.btn-3d,
.input-3d {
  font-family: "Fira Mono", monospace;
  outline: none;
  border: none;
  padding: $btn-padding;
  margin: $btn-margin;
  font-size: $main-font-size;
  border-radius: $btn-border-radius;
}

.btn-3d {
  @mixin color($cl) {
    background: $cl;
    color: $btn-fore-color;
    box-shadow: 0px $btn-3d-height darken($cl, $shadow-darkness);

    &:active {
      transform: translateY($btn-3d-height);
      box-shadow: inset 0px 5px 5px darken($cl, $shadow-darkness);
    }
  }

  cursor: pointer;

  @include color($btn-blue);

  > span {
    vertical-align: text-bottom;
    
    font-family: 'Material Icons';
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    -webkit-font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased;
  }

  // > .material-icons {
  //   vertical-align: text-bottom;
  // }

  &.small {
    padding: 5px;
    font-size: large;
    > * {
      font-size: large;
    }
  }

  &.tiny {
    padding: 2px;
    font-size: medium;
    > * {
      font-size: medium;
    }
  }

  @each $color, $val in $colors {
    &.#{$color} {
      @include color($val);
    }
  }
}

.input-3d {
  background: $input-back-color;
  color: $modal-back-color;
  box-shadow: 0px $btn-3d-height darken($input-back-color, $shadow-darkness);

  &::-webkit-input-placeholder {
    color: alpha($modal-back-color);
  }

  &:focus {
    transform: translateY($btn-3d-height);
    box-shadow: inset 0px 5px 5px darken($input-back-color, $shadow-darkness);
  }
}
